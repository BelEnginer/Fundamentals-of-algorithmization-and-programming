#include "icedata.h"
#include<QDebug>
#include <cmath>

IceData::IceData()
{
iceStrengths = {
           {0.01, 38000},
           {0.02, 41000},
           {0.03, 44000},
           {0.04, 47000},
           {0.05, 49900},
           {0.06, 55000},
           {0.07, 74300},
           {0.08, 91500},
           {0.09, 97000},
           {0.10, 109000},
           {0.11, 123000},
           {0.12, 140000},
           {0.13, 163000},
           {0.14, 180000},
           {0.15, 200000},
           {0.16, 220000},
           {0.17, 240000},
           {0.18, 260000},
           {0.19, 280000},
           {0.20, 300000},
           {0.21, 320000},
           {0.22, 340000},
           {0.23, 360000},
           {0.24, 380000},
           {0.25, 400000},
           {0.26, 420000},
           {0.27, 440000},
           {0.28, 460000},
           {0.29, 480000},
           {0.30, 500000},
           {0.31, 520000},
           {0.32, 540000},
           {0.33, 560000},
           {0.34, 580000},
           {0.35, 600000},
           {0.36, 620000},
           {0.37, 640000},
           {0.38, 660000},
           {0.39, 680000},
           {0.40, 700000},
           {0.41, 720000},
           {0.42, 740000},
           {0.43, 760000},
           {0.44, 780000},
           {0.45, 800000},
           {0.46, 820000},
           {0.47, 840000},
           {0.48, 860000},
           {0.49, 880000},
           {0.50, 900000},
           {0.51, 920000},
           {0.52, 940000},
           {0.53, 960000},
           {0.54, 980000},
           {0.55, 1000000},
           {0.56, 1020000},
           {0.57, 1040000},
           {0.58, 1060000},
           {0.59, 1080000},
           {0.60, 1100000},
           {0.61, 1120000},
           {0.62, 1140000},
           {0.63, 1160000},
           {0.64, 1180000},
           {0.65, 1200000},
           {0.66, 1220000},
           {0.67, 1240000},
           {0.68, 1260000},
           {0.69, 1280000},
           {0.70, 1300000},
           {0.71, 1320000},
           {0.72, 1340000},
           {0.73, 1360000},
           {0.74, 1380000},
           {0.75, 1400000},
           {0.76, 1420000},
           {0.77, 1440000},
           {0.78, 1460000},
           {0.79, 1480000},
           {0.80, 1500000},
           {0.81, 1520000},
           {0.82, 1540000},
           {0.83, 1560000},
           {0.84, 1580000},
           {0.85, 1600000},
           {0.86, 1620000},
           {0.87, 1640000},
           {0.88, 1660000},
           {0.89, 1680000},
           {0.90, 1700000},
           {0.91, 1720000},
           {0.92, 1740000},
           {0.93, 1760000},
           {0.94, 1780000},
           {0.95, 1800000},
           {0.96, 1820000},
           {0.97, 1840000},
           {0.98, 1860000},
           {0.99, 1880000},
           {1.00, 1900000}
    };
}

int IceData::getCompressionStrength(double thickness)
{
    double roundedThickness = std::round(thickness * 100.0) / 100.0; // Округляем до двух знаков после запятой
    auto it = iceStrengths.find(roundedThickness); // Ищем округленное значение в контейнере
    if (it != iceStrengths.end()) {
        return it->second; // Возвращаем прочность на сжатие, если значение найдено
    } else {
        return -1; // Возвращаем -1, если значение не найдено
    }
}

